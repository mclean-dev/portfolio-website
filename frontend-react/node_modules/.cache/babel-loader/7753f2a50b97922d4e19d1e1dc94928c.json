{"ast":null,"code":"\"use strict\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar assign = require('object-assign');\n\nvar validators = require('../validators');\n\nvar Patch = require('./patch');\n\nvar defaultMutateOptions = {\n  returnDocuments: false\n};\n\nfunction Transaction() {\n  var operations = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var client = arguments.length > 1 ? arguments[1] : undefined;\n  var transactionId = arguments.length > 2 ? arguments[2] : undefined;\n  this.trxId = transactionId;\n  this.operations = operations;\n  this.client = client;\n}\n\nassign(Transaction.prototype, {\n  clone: function clone() {\n    return new Transaction(this.operations.slice(0), this.client, this.trxId);\n  },\n  create: function create(doc) {\n    validators.validateObject('create', doc);\n    return this._add({\n      create: doc\n    });\n  },\n  createIfNotExists: function createIfNotExists(doc) {\n    var op = 'createIfNotExists';\n    validators.validateObject(op, doc);\n    validators.requireDocumentId(op, doc);\n    return this._add(_defineProperty({}, op, doc));\n  },\n  createOrReplace: function createOrReplace(doc) {\n    var op = 'createOrReplace';\n    validators.validateObject(op, doc);\n    validators.requireDocumentId(op, doc);\n    return this._add(_defineProperty({}, op, doc));\n  },\n  delete: function _delete(documentId) {\n    validators.validateDocumentId('delete', documentId);\n    return this._add({\n      delete: {\n        id: documentId\n      }\n    });\n  },\n  patch: function patch(documentId, patchOps) {\n    var isBuilder = typeof patchOps === 'function';\n    var isPatch = documentId instanceof Patch; // transaction.patch(client.patch('documentId').inc({visits: 1}))\n\n    if (isPatch) {\n      return this._add({\n        patch: documentId.serialize()\n      });\n    } // patch => patch.inc({visits: 1}).set({foo: 'bar'})\n\n\n    if (isBuilder) {\n      var patch = patchOps(new Patch(documentId, {}, this.client));\n\n      if (!(patch instanceof Patch)) {\n        throw new Error('function passed to `patch()` must return the patch');\n      }\n\n      return this._add({\n        patch: patch.serialize()\n      });\n    }\n\n    return this._add({\n      patch: assign({\n        id: documentId\n      }, patchOps)\n    });\n  },\n  transactionId: function transactionId(id) {\n    if (!id) {\n      return this.trxId;\n    }\n\n    this.trxId = id;\n    return this;\n  },\n  serialize: function serialize() {\n    return this.operations.slice();\n  },\n  toJSON: function toJSON() {\n    return this.serialize();\n  },\n  commit: function commit(options) {\n    if (!this.client) {\n      throw new Error('No `client` passed to transaction, either provide one or pass the ' + 'transaction to a clients `mutate()` method');\n    }\n\n    return this.client.mutate(this.serialize(), assign({\n      transactionId: this.trxId\n    }, defaultMutateOptions, options || {}));\n  },\n  reset: function reset() {\n    this.operations = [];\n    return this;\n  },\n  _add: function _add(mut) {\n    this.operations.push(mut);\n    return this;\n  }\n});\nmodule.exports = Transaction;","map":{"version":3,"sources":["/home/mcleanj/projects/portfolio-website/frontend-react/node_modules/@sanity/client/lib/data/transaction.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","assign","require","validators","Patch","defaultMutateOptions","returnDocuments","Transaction","operations","arguments","length","undefined","client","transactionId","trxId","prototype","clone","slice","create","doc","validateObject","_add","createIfNotExists","op","requireDocumentId","createOrReplace","delete","_delete","documentId","validateDocumentId","id","patch","patchOps","isBuilder","isPatch","serialize","Error","toJSON","commit","options","mutate","reset","mut","push","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar assign = require('object-assign');\n\nvar validators = require('../validators');\n\nvar Patch = require('./patch');\n\nvar defaultMutateOptions = {\n  returnDocuments: false\n};\n\nfunction Transaction() {\n  var operations = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var client = arguments.length > 1 ? arguments[1] : undefined;\n  var transactionId = arguments.length > 2 ? arguments[2] : undefined;\n  this.trxId = transactionId;\n  this.operations = operations;\n  this.client = client;\n}\n\nassign(Transaction.prototype, {\n  clone: function clone() {\n    return new Transaction(this.operations.slice(0), this.client, this.trxId);\n  },\n  create: function create(doc) {\n    validators.validateObject('create', doc);\n    return this._add({\n      create: doc\n    });\n  },\n  createIfNotExists: function createIfNotExists(doc) {\n    var op = 'createIfNotExists';\n    validators.validateObject(op, doc);\n    validators.requireDocumentId(op, doc);\n    return this._add(_defineProperty({}, op, doc));\n  },\n  createOrReplace: function createOrReplace(doc) {\n    var op = 'createOrReplace';\n    validators.validateObject(op, doc);\n    validators.requireDocumentId(op, doc);\n    return this._add(_defineProperty({}, op, doc));\n  },\n  delete: function _delete(documentId) {\n    validators.validateDocumentId('delete', documentId);\n    return this._add({\n      delete: {\n        id: documentId\n      }\n    });\n  },\n  patch: function patch(documentId, patchOps) {\n    var isBuilder = typeof patchOps === 'function';\n    var isPatch = documentId instanceof Patch; // transaction.patch(client.patch('documentId').inc({visits: 1}))\n\n    if (isPatch) {\n      return this._add({\n        patch: documentId.serialize()\n      });\n    } // patch => patch.inc({visits: 1}).set({foo: 'bar'})\n\n\n    if (isBuilder) {\n      var patch = patchOps(new Patch(documentId, {}, this.client));\n\n      if (!(patch instanceof Patch)) {\n        throw new Error('function passed to `patch()` must return the patch');\n      }\n\n      return this._add({\n        patch: patch.serialize()\n      });\n    }\n\n    return this._add({\n      patch: assign({\n        id: documentId\n      }, patchOps)\n    });\n  },\n  transactionId: function transactionId(id) {\n    if (!id) {\n      return this.trxId;\n    }\n\n    this.trxId = id;\n    return this;\n  },\n  serialize: function serialize() {\n    return this.operations.slice();\n  },\n  toJSON: function toJSON() {\n    return this.serialize();\n  },\n  commit: function commit(options) {\n    if (!this.client) {\n      throw new Error('No `client` passed to transaction, either provide one or pass the ' + 'transaction to a clients `mutate()` method');\n    }\n\n    return this.client.mutate(this.serialize(), assign({\n      transactionId: this.trxId\n    }, defaultMutateOptions, options || {}));\n  },\n  reset: function reset() {\n    this.operations = [];\n    return this;\n  },\n  _add: function _add(mut) {\n    this.operations.push(mut);\n    return this;\n  }\n});\nmodule.exports = Transaction;"]},"metadata":{},"sourceType":"script"}