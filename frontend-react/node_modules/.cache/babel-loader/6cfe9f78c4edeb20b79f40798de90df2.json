{"ast":null,"code":"var _jsxFileName = \"/home/mcleanj/projects/portfolio-website/frontend-react/src/container/Skills/Skills.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport ReactTooltip from 'react-tooltip';\nimport { AppWrap, MotionWrap } from '../../wrapper';\nimport { urlFor, client } from '../../client';\nimport './Skills.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Skills = () => {\n  _s();\n\n  const [experience, setExperience] = useState([]);\n  const [skills, setSkills] = useState([]);\n  useEffect(() => {\n    const query = '*[_type == \"experiences\"]';\n    const skillsQuery = '*[_type == \"skills\"]';\n    client.fetch(query).then(data => {\n      console.log(data);\n      setExperience(data);\n    });\n    client.fetch(skillsQuery).then(data => {\n      setSkills(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"head-text\",\n      children: \"Skills & Experience\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__skills-container\",\n      children: [/*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"app__skills-list\",\n        children: skills === null || skills === void 0 ? void 0 : skills.map(skill => /*#__PURE__*/_jsxDEV(motion.div, {\n          whileInView: {\n            opacity: [0, 1]\n          },\n          transition: {\n            duration: 0.5\n          },\n          className: \"app__skills-item app__flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"app__flex\",\n            style: {\n              backgroundColor: skill.bgColor\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: urlFor(skill.icon),\n              alt: skill.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"p-text\",\n            children: skill.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, skill.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"app__skills-exp\",\n        children: [console.log(experience.works), experience === null || experience === void 0 ? void 0 : experience.map(experience => /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"app__skills-exp-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"app__skills-exp-year\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"bold-text\",\n              children: experience.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n            className: \"app__skills-exp-works\",\n            children: experience.works.map(work => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(motion.div, {\n                whileInView: {\n                  opacity: [0, 1]\n                },\n                transition: {\n                  duration: 0.5\n                },\n                className: \"app__skills-exp-work\",\n                \"data-tip\": true,\n                \"data-for\": work.name,\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"bold-text\",\n                  children: work.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"p-text\",\n                  children: work.company\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 23\n                }, this)]\n              }, work.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n                id: work.name,\n                effect: \"solid\",\n                arrowColor: \"#fff\",\n                className: \"skills-tooltip\",\n                children: work.desc\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, experience.year, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Skills, \"PDxa8gCZPuvO2Oa7o1V+rdxieu0=\");\n\n_c = Skills;\nexport default _c3 = AppWrap(_c2 = MotionWrap(Skills, 'app__skills'), 'skills', 'app__whitebg');\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Skills\");\n$RefreshReg$(_c2, \"%default%$AppWrap\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["/home/mcleanj/projects/portfolio-website/frontend-react/src/container/Skills/Skills.jsx"],"names":["React","useState","useEffect","motion","ReactTooltip","AppWrap","MotionWrap","urlFor","client","Skills","experience","setExperience","skills","setSkills","query","skillsQuery","fetch","then","data","console","log","map","skill","opacity","duration","backgroundColor","bgColor","icon","name","works","year","work","company","desc"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { motion } from 'framer-motion'\nimport ReactTooltip from 'react-tooltip'\nimport { AppWrap, MotionWrap } from '../../wrapper'\nimport { urlFor, client } from '../../client'\n\nimport './Skills.scss'\n\n\nconst Skills = () => {\n\n  const [experience, setExperience] = useState([]);\n  const [skills, setSkills] = useState([]);\n\n  useEffect(() => {\n    const query = '*[_type == \"experiences\"]';\n    const skillsQuery = '*[_type == \"skills\"]';\n\n\n    client.fetch(query)\n    .then((data) => {\n      console.log(data)\n      setExperience(data);\n    })\n    client.fetch(skillsQuery)\n    .then((data) => {\n      setSkills(data);\n    }) \n  \n  }, [])\n  return (\n    <>\n      <h2 className=\"head-text\">Skills & Experience</h2>\n\n      <div className=\"app__skills-container\">\n        <motion.div className='app__skills-list' >\n          {skills?.map((skill) => (\n            <motion.div\n            whileInView={{opacity: [0, 1]}}\n            transition={{duration: 0.5}}\n            className=\"app__skills-item app__flex\"\n            key={skill.name}\n            >\n              <div className=\"app__flex\" style={{backgroundColor: skill.bgColor}}>\n                <img src={urlFor(skill.icon)} alt={skill.name} />\n              </div>\n              <p className=\"p-text\">{skill.name}</p>\n            </motion.div>\n          ))}\n        </motion.div>\n        <motion.div className='app__skills-exp'>\n          {console.log(experience.works)}\n          {experience?.map((experience) => (\n            <motion.div\n            className='app__skills-exp-item'\n            key={experience.year} \n            >\n              <div className=\"app__skills-exp-year\">\n                <p className=\"bold-text\">{experience.year}</p>\n              </div>\n              <motion.div\n              className='app__skills-exp-works'\n              >\n                {experience.works.map((work) => (\n                  <>\n                    <motion.div\n                      whileInView={{ opacity: [0, 1] }}\n                      transition={{ duration: 0.5 }}\n                      className=\"app__skills-exp-work\"\n                      data-tip\n                      data-for={work.name}\n                      key={work.name}\n                    >\n                      <h4 className=\"bold-text\">{work.name}</h4>\n                      <p className=\"p-text\">{work.company}</p>\n                    </motion.div>\n                    <ReactTooltip\n                      id={work.name}\n                      effect=\"solid\"\n                      arrowColor='#fff'\n                      className='skills-tooltip'\n                    >\n                      {work.desc}\n                    </ReactTooltip>\n                  </>\n                ))}\n              </motion.div>\n            </motion.div>\n          ))}\n\n          {\n            \n          }\n        </motion.div>\n      </div>\n    </>\n  )\n}\n\nexport default AppWrap(\n  MotionWrap(Skills, 'app__skills'),\n   'skills',\n   'app__whitebg'\n   )\n"]},"metadata":{},"sourceType":"module"}