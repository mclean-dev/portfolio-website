export type { ResolvedValues, ScrapeMotionValuesFromProps, } from "framer-motion/types/render/types";
export type { AnimationLifecycles } from "framer-motion/types/render/utils/lifecycles";
export type { CreateVisualElement } from "framer-motion/types/render/types";
export { AnimationType } from "framer-motion/types/render/utils/types";
export { animations } from "framer-motion/types/motion/features/animations";
export { useVisualElementContext } from "framer-motion/types/context/MotionContext";
export { checkTargetForNewValues } from "framer-motion/types/render/utils/setters";
export { createBox } from "framer-motion/types/projection/geometry/models";
export { calcLength } from "framer-motion/types/projection/geometry/delta-calc";
export { filterProps } from "framer-motion/types/render/dom/utils/filter-props";
export { makeUseVisualState } from "framer-motion/types/motion/utils/use-visual-state";
export { isDragActive } from "framer-motion/types/gestures/drag/utils/lock";
export { addPointerEvent } from "framer-motion/types/events/use-pointer-event";
export { wrapHandler } from "framer-motion/types/events/event-info";
export { isMotionValue } from "framer-motion/types/value/utils/is-motion-value";
export { isBrowser } from "framer-motion/types/utils/is-browser";
export { useUnmountEffect } from "framer-motion/types/utils/use-unmount-effect";
export { useIsomorphicLayoutEffect } from "framer-motion/types/utils/use-isomorphic-effect";
export { useForceUpdate } from "framer-motion/types/utils/use-force-update";
